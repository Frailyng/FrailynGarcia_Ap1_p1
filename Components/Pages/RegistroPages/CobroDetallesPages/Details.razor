@page "/CobroDetalle/Details"
@page "/CobroDetalle/Details/{DetalleId:int}"
@inject CobroDetalleService CobroDetalleService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles de Detalle de Cobro</PageTitle>

@if (CobroDetalle != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header bg-primary text-white text-center py-2 rounded">
                <h3 class="text-center"><strong>Detalles del Detalle de Cobro</strong></h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>DetalleId:</strong> @CobroDetalle.DetalleId</li>
                                <li><strong>CobroId:</strong> @CobroDetalle.CobroId</li>
                                <li><strong>PrestamoId:</strong> @CobroDetalle.PrestamoId</li>
                                <li><strong>Valor Cobrado:</strong> @CobroDetalle.ValorCobrado</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-primary" @onclick="Volver">
                    <i class="bi bi-box-arrow-left"></i> Volver
                </button>
            </div>
        </div>
    </div>
}
else
{
    <p>Detalle de Cobro no encontrado.</p>
}

@code {
    [Parameter]
    public int DetalleId { get; set; }
    public CobrosDetalle? CobroDetalle { get; set; } = new CobrosDetalle();

    protected override async Task OnInitializedAsync()
    {
        CobroDetalle = await CobroDetalleService.Buscar(DetalleId);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/CobroDetalle/Index");
    }
}
