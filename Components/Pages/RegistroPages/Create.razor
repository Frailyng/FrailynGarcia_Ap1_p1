@page "/Prestamo/Create"

@inject PrestamosService PrestamosService
@inject DeudoresService DeudoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>
<EditForm Model="Prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
     
    <div class="container">
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h3> <i class="fas fa-clipboard-list"></i> Prestamo</h3>
        </div>

        <div class="card-body">

            @*Deudor*@
            <div class="mb-3">
                <label class="form-label"><strong>Deudor</strong></label>
                <InputSelect class="form-control form-select" @bind-Value="Prestamo.DeudorId">
                    <option>Elija una opci&oacute;n</option>
                    @foreach (var deudor in ListaDeudores)
                    {
                        <option value="@deudor.DeudorId">@deudor.Nombres</option>
                    }
                </InputSelect>
                <ValidationMessage For="(() => Prestamo.DeudorId)" />
            </div>

            @* Conceptos *@
            <div class="mb-3">
                <label for="Conceptos" class="form-label"><strong>Conceptos:</strong></label>
                <InputText @bind-Value="Prestamo.Conceptos" class="form-control"></InputText>
                <ValidationMessage For="(() => Prestamo.Conceptos)" />
            </div>

            @* Montos *@
            <div class="mb-3">
                <label for="Montos" class="form-label"><strong>Montos:</strong></label>
                <InputNumber @bind-Value="Prestamo.Monto" class="form-control"></InputNumber>
                <ValidationMessage For="(() => Prestamo.Monto)" />
            </div>

        </div>

          @*footer*@
            <div class="card-footer text-center mt-2">
                <a href="/Prestamo/Index" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>
            </div>
        </div>
    </div>

</EditForm>
@Mensaje

@code {
    public Prestamos Prestamo { get; set; } = new Prestamos();
    public string Mensaje { get; set; } = string.Empty;
    public List<Deudores> ListaDeudores { get; set; } = new List<Deudores>();

    protected override async Task OnInitializedAsync()
    {
        ListaDeudores = await DeudorService.Listar(d => d.DeudorId > 0);
    }

    public async Task Guardar()
    {
        var guardo = await PrestamoService.Guardar(Prestamo);

        if (guardo)
        {
            Mensaje = "Creado correctamente";
            navigationManager.NavigateTo("/Prestamo/Index");
        }
        else
        {
            Mensaje = "No se ha creado correctamente";
        }
    }
    }
