@page "/Prestamo/Index"
@rendermode InteractiveServer
@inject NavigationManager navigation

<PageTitle></PageTitle>
<div class="Container">
    <div class="card shadow-lg">
        <div class="card-header">
            <h5 class="card-title">Registro</h5>
        </div>
        
        <div class="card-body">

            <a href="#"
            class="btn btn-primary">
            <span class="bi bi-plus-square mt-3"></span> Crear
        </a>

        <table class="table table-light table-bordered">
            <thead class="table table-striped text-center text-white">
                <tr>
                </tr>
            </thead>
            <tbody>
                    <a href="#"
                       class="btn btn-primary">
                        <span class="bi bi-plus-square mt-3"></span> Crear
                    </a>
                <td class="text-center">
                    <a href="#" class="btn bi bi-eye"></a>
                </td>
                <td class="text-center">
                    <a href="#" class="btn bi bi-pencil-square"></a>
                </td>
                <td class="text-center">
                    <a href="#" class="btn bi bi-trash"></a>
                </td>

                <a href="#"
                   class="btn btn-primary">
                    <span class="bi bi-floppy mt-3"></span> Guardar
                </a>
                <a href="#"
                   class="btn btn-primary">
                    <span class="bi bi-arrow-left mt-3"></span> Volver
                </a>
            </tbody>
        </table>
        </div>
    
    </div>
        
</div>


@code {
   /* public Prestamos Prestamo = new Prestamos();
    //public <List<Registros>> ListaPrestamos = new <List<Registros>>();
    private string Filtro = "prestamoid";
    private string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        //ListaRegistros = await RegistroService.Listar(p => true);
    }

    public async Task Guardar()
    {
        var guardo = await PrestamoService.Guardar(Prestamo);
    }

    public async Task Buscar()
    {
        if (valorFiltro != null)
        {
            if (Filtro == "prestamoid" && int.TryParse(valorFiltro, out int Prestamoid))
            {
                //ListaPrestamos = await RegistroService.Listar(p => p.PrestamosId == prestamoid);            
            }
            else if (Filtro == "deudores")
            {
                //ListaPrestamos = await RegistroService.Listar(p => p.Deudores == valorFiltro);
            }
        }
    }*/
}
