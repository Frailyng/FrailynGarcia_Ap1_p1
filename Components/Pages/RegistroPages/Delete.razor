@page "/Prestamo/Delete/{PrestamoId:int}"

@inject PrestamosService PrestamosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle> Delete</PageTitle>
    <div class="container">
        <div class="card shadow-lg">

        @*header*@
        <div class="card-header text-center">
            <h5><strong>Datos del prestamo</strong></h5>
        </div>

        @*body*@
        <div class="card-body">
            <div class="text-center">
                <h5><strong>Desea eliminar el prestamo?</strong></h5>
            </div>
            <ul>
                <li><strong>Id: </strong>@Prestamo.PrestamoId</li>
                <li><strong>DeudorId: </strong>@Prestamo.Deudor.DeudorId</li>
                <li><strong>Deudor: </strong>@Prestamo.Deudor.Nombres</li>
                <li><strong>Concepto: </strong>@Prestamo.Concepto</li>
                <li><strong>Monto: </strong>@Prestamo.Monto</li>
            </ul>
        </div>

        @*Footer*@
        <div class="card-footer text-center">
            <a href="/Prestamo/Index" class="btn btn-primary"> <span class="bi bi-arrow-left"></span> Volver</a>
            <button type="button" class="btn btn-danger bi bi-trash" @onclick="Eliminar"> Eliminar</button>
        </div>
    </div>
</div>
@Mensaje


@code {
    [Parameter]
    public int PrestamoId { get; set; }
    public Prestamos Prestamo { get; set; } = new Prestamos();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {

        Prestamo = await PrestamosService.Buscar(PrestamoId);

    }

    public async Task Eliminar()
    {
        var eliminado = await PrestamosService.Eliminar(Prestamo.PrestamoId);

        if (eliminado)
        {
            Mensaje = "Se elimino Correctamente";
            navigationManager.NavigateTo("Prestamo/Index");
        }
        else
        {
            Mensaje = "No se ha eliminado Correctamente";
        }
    }
}
